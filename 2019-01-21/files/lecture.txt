0. Настройка интерпретатора

1. Функции
    - зачем нужны и что это такое
    - название+аргумент+тело+возвращаемы значения
        function foo ( [ bar ] ) {
            [ body ]

            return $baz;
        }
    - отличие ** от pow
    - вызов функции
    - что такое Сигнатура (вход-выход), учимся читать документацию php.net
    - что такое Стандартная библиотека, как читать описание функций

2. Аргументы
    - что такое аргумент (параметр)
    - уточнение типа получаемых аргументов
    - сколько может быть аргументов
    - аргументы по умолчанию - необязательные
    - передача аргументов - обязательные/необязательные, порядок их передачи
    - Аргументы как выражения (исполняемые/вычисляемые конструкции)
    - вызов функции из аргумента функции

3. Создание функций
    - код, в котором создаётся функция, называется определением функции
    - аргумент должен быть переменной
    - ; - не надо потому что описываем рееализацию, не используем ее
    - вызов функции, до объявления или после?
    - именование функций

4. Возвращаемые значения
    - return, или без него
    - return null - возврат по умолчанию
    - возврат значений, что будет если будет 2 return?
    - указание возвращаемого типа
    - возврат нескольких значений:
        function foo() { ... return array($bar1, $bar2); }
        list($a, $b) = foo();

5. Другие виды функций
    - Функция как переменная (динамический вызов функции из переменной):
        function foo($bar) { ... return $baz; }
        $bat = 'foo';
        $bat($bar);
    - Анонимные функции (замыкания, кложуры - closures):
        $foo = function($bar) {
            echo $bar;
        };
        // call
        $foo('Hello');
    - Рекурсивные функции
        = вызывают сами себя
        = пишем рекурсивную функцию факториала и чисел Фибоначчи

6. Функции управления функциями
    http://php.net/manual/ru/ref.funchand.php
    - function_exists($foo) - проверка существования функции $foo
    - call_user_func($foo, $param1, $param2, ... ) - вызов функции $foo с параметрами $param1, $param2, ...
    - func_get_args() - возвращает массив аргументов, переданных в функцию
    - func_get_args() - создание функций с неограниченным количеством аргументов
        = function foo(…$vals){}

7. Области видимости
    - Области видимости для функций (попытаемся обработать переменную извне без передачи ее в функцию)
    - понимание локальной и глобальной области видимости
    - Получение/изменение переменных из глобальной области
        = константы, магические константы
        = global - глобальные переменные
        = $GLOBALS - глобальные переменные
        = & - передача аргумента по ссылке
        = static - статические переменные
