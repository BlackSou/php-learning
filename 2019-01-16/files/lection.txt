1. То что упустили на прошлом занятии:
 - арифметические операции:
    ** — возведение в степень
 - строковые операции:
    .= - оператор конкатенации и присваивания 
 -  Heredoc синтаксис
        <?php

        $str = <<<EOT
        Пример строки,
        охватывающей несколько строк,
        с использованием heredoc-синтаксиса.
        Здесь не нужно экранировать одинарные кавычки ' и двойные "
        EOT;
        print_r($str);

2. Логические операторы:
    !   - отрицание (противоположность)
    &&  - означает "И" (все условия)
    XOR - cложение по модулю 2 (только одно)
    ||  - "ИЛИ" (хотя бы одно)


3. Операции сравнения:
    < меньше
    <= меньше или равно
    > больше
    >= больше или равно
    === равно (== равно не строго)
    !== не равно (!= не равно не строго)

4. Массивы:
 - индексные (чисельно-индексные или списки) - с ключами числами
 - ассоциативные - с хотя бы одним ключем строкой
 - обращение к элементу массива
 - добавление нового элемента
 - рассмотреть массивы с непоследовательными индексами
 - массивы в массиве - многомерные
 - приведение типов: type => toArray, array => toType
 - строка как массив, индекс строки $stringVar[0], $stringVar = 'stringVar'

5. Условные конструкции
    - КЛАССИКА
        if (условие 1) {
            // код, который будет выполнен
            // если условие 1 истинно
        } else if (условие 2) {
            // код, который будет выполнен
            // если условие 1 ложно, но условие 2 истинно
        } else {
            // код, который будет выполнен
            // в ином случае
        }
    - Тернарный оператор
        <condition> ? <expression on true> : <expression on false>
        // например
        $number >= 0 ? $number : -$number
    - Оператор Элвис
        <this, if it's true> ?: <this otherwise>
        // например
        $name ?: $nickname;
    - Null-коалесцентный оператор (PHP7)
        // if (isset($foo)) { 
        //     $bar = $foo; 
        // } else { 
        //     $bar = 'default'; 
        // }
        $bar = $foo ?? 'default';
        $bar = $foo ?? $baz ?? 'default';
    - switch-case:
        switch ( $var ) {
            case value-1 : 
                statements-1;
                break;
            case value-2 : 
                statements-2;
                break;
            default: 
                statements-def;
        }

6. Циклы
    - for (счётчик; предикат; изменение счётчика) { // тело цикла }
        for ($i=0; $i<=10; $i++) {
            // smth
        }
    - while
        while (условие) {
            // код, который будет повторяться
            // пока условие истинно
        }
    - do-while
        do {
            // код выполнится минимум ОДИН раз
            // код, который будет повторяться
            // пока условие истинно
        } while ( $cond );
    - foreach
        foreach ($arr as $key => $value) {
            // body
        }
    - Возврат (выход) из циклов
        break;
    - Следующая итерация цикла
        continue;

7. Строковые функции
    - strlen($s) - длина строки
    - strpos ($s, $t) - поиск позиции первого вхождения строки 
    - str_replace ($s, $replace, $where) - замена подстроки строкой
    - substr - возвращает подстроку
    - strstr - получить первое вхождение подстроки
    - trim - удаляет пробелы (или другие символы) из начала и конца строки

8. Функции работы с массивами:
    - serialize(), unserialize()
    - implode(), explode()
    - count () - количество элементов в массиве
    - array_push ($arr, $a) - добавляет новый элемент в массив
    - array_shift - первый элемент массива, сокращая размер array на один элемент
    - array_unique( $arr ) - возвращает массив с уникальными элементами
    - in_array ( $a, $arr ) - проверка элемнт есть в массиве
    - array_key_exists - проверяет, присутствует ли в массиве указанный ключ или индекс
    - array_keys, array_values - извлечение ключей/значений массива
    - сортировка массивов http://php.net/manual/ru/array.sorting.php

9. Стандарты по кодонаписанию:
    - Базовый стандарт написания кода (PSR-1) https://www.php-fig.org/psr/psr-1/
    - Руководство по оформлению кода (PSR-2) https://www.php-fig.org/psr/psr-2/

10. Экранирование записей в строках, спец символы:
    - символ экранирования: \
    - Экранирующие последовательности \n \t \s
    - Экранирующие последовательности вроде \n работают только внутри двойных кавычек
  
11. Предопределенные константы
    http://php.net/manual/ru/reserved.constants.php
    - E_ALL 
    - TRUE, FALSE
    - NULL
    - ...

12. Волшебные (Магические) константы
http://php.net/manual/ru/language.constants.predefined.php
    - __LINE__ - Текущий номер строки в файле.
    - __FILE__ - Полный путь и имя текущего файла
    - __DIR__ - Директория файла
    - __FUNCTION__ - Имя функции
    - __CLASS__ - Имя класса c названиеv пространства имен (например, Foo\Bar)
    - __TRAIT__ - Имя трейта c названиеv пространства имен (например, Foo\Bar)
    - __METHOD__ - Имя метода класса.
    - __NAMESPACE__ - Имя текущего пространства имен.
    - ClassName::class - Полное имя класса с указанием пространства имен

